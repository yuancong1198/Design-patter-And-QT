#pragma once
/*
    观察者模式： 定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖该对象的对象都会得到通知并被自动更新。
    
    动机：在软件构建过程中，我们需要为某些对象建立一种“通知依赖关系”----一个对象的状态发生改变，所有依赖的对象都能得到通知。如果这样的依赖关系过于紧密，将使软件不能很好的
抵御变化。
    使用面向对象技术可以将这种依赖关系弱化，并形成一种稳定的依赖关系，从而实现软件体系结构的松耦合。

    常见的例子：对同一组数据进行统计分析的时候，我们希望能够提供多种形式的表示（如以列表进行统计显示、以柱状图统计显示、百分比统计显示）。这些表示都依赖于同一组数据。我们
当然需要当这些数据改变的时候，所有的统计的显示都能够同时进行改变。观察者模式就是解决了这一个问题。 

    观察者与目标对象的协作关系：
        （1） 当具体目标对象（ConcreteSubject)发生任何可能导致其观察者与其本身状态不一致的改变时，它将通知它的各个观察者。
        （2） 在得到一个具体目标的改变通知后，ConcreteObserver使用这些信息以使它的状态与目标对象的状态一致。

    使用场合：
        （1） 当一个抽象模型有两个方面，其中一个依赖于另一方面。将这二者封装在独立的对象中以使他们可以各自独立的改变和复用。（如SVM模式，将数据与表示分开）
        （2） 当对一个对象的改变需要同时改变其他对象，而不知道具体有多少对象有待改变。（如系统的插件中消息的传递）
        （3） 当一个对象必须通知其他对象，而它又不能假定其它对象是谁；也就是说，你不希望这些对象是紧密耦合的。（如Qt中的信号槽关系）





















*/