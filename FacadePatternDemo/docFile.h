#pragma once
/*
门面模式（外观模式）： 要求子系统的外部与其内部的通信必须通过统一的对象进行，门面模式提供一个高层次的接口，使子系统更易于使用。

Facade门面角色：客户端可以调用这个角色的方法，此角色知晓子系统的所有功能和责任，一般情况下，本角色会将所有从客户端发来的请求委托
派到相应的子系统中去，也就是说该角色没有实际的业务逻辑，只是个委托类。

subsystem子系统角色 ： 可以同时有一个或者多个子系统。每一个子系统都不是一个单独的类，而是一个类的集合。子系统并不知道门面的存在。
对于子系统而言，门面仅仅是另外一个客户端而已。

适应性：（1） 为一个复杂系统提供一个简单接口
		（2） 提高子系统的独立性
		（3） 在层次化结构中，可以使用Facade模式定义系统中每一层的入口。

优点： （1） 松耦合
			门面模式松散了客户端和子系统的耦合关系，让子系统内部的模块能够容易扩展和维护。
	   （2） 简单易用
			门面模式让子系统更加易用，客户端不再需要了解子系统内部的模块进行交互，只需要和门面类进行交互即可。
	   （3） 更好的划分访问层次
			把需要暴露给外界的功能集中到门面类中，这样方便客户端使用，更好隐藏内部细节。
缺点： 过多或不合理使用可能使人迷惑。


*/